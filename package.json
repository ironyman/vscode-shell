{
  "name": "shell",
  "displayName": "shell",
  "description": "",
  "publisher": "ironyman",
  "version": "0.0.1",
  "license": "BSD-3-Clause",
  "repository": "https://github.com/ironyman/vscode-shell",
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "views": {
      "explorer": [
        {
          "id": "shell.documentShellCommandView",
          "name": "Commands"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "shell.documentShellCommandView.refresh",
          "when": "view == shell.documentShellCommandView",
          "group": "navigation"
        },
        {
          "command": "shell.documentShellCommandView.clear",
          "when": "view == shell.documentShellCommandView",
          "group": "navigation"
        },
        {
          "command": "shell.clipboardHistoryView.clear",
          "when": "view == shell.clipboardHistoryView",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "command": "shell.executeSelection",
          "when": "editorTextFocus",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "shell.documentShellCommandView.run",
          "when": "view == shell.documentShellCommandView && viewItem == shell.documentShellCommandTreeItem",
          "group": "inline"
        },
        {
          "command": "shell.documentShellCommandView.run",
          "when": "view == shell.documentShellCommandView && viewItem == shell.documentShellCommandTreeItem"
        },
        {
          "command": "shell.documentShellCommandView.runQueue",
          "when": "view == shell.documentShellCommandView && viewItem == shell.documentShellCommandTreeItem",
          "group": "inline"
        },
        {
          "command": "shell.documentShellCommandView.runQueue",
          "when": "view == shell.documentShellCommandView && viewItem == shell.documentShellCommandTreeItem"
        },
        {
          "command": "shell.clipboardHistoryView.paste",
          "when": "view == shell.clipboardHistoryView && viewItem == shell.clipboardHistoryTreeItem",
          "group": "inline"
        },
        {
          "command": "shell.clipboardHistoryView.paste",
          "when": "view == shell.clipboardHistoryView && viewItem == shell.clipboardHistoryTreeItem"
        },
        {
          "command": "shell.clipboardHistoryView.delete",
          "when": "view == shell.clipboardHistoryView && viewItem == shell.clipboardHistoryTreeItem"
        },
        {
          "command": "shell.clipboardHistoryView.edit",
          "when": "view == shell.clipboardHistoryView && viewItem == shell.clipboardHistoryTreeItem"
        }
      ]
    },
    "commands": [
      {
        "command": "shell.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "shell.runCommand",
        "title": "Run Command",
        "category": "Shell"
      },
      {
        "command": "shell.showHistory",
        "title": "Show Command History",
        "category": "Shell"
      },
      {
        "command": "shell.terminateCommand",
        "title": "Terminate Running Command",
        "category": "Shell"
      },
      {
        "command": "shell.showCommandLog",
        "title": "Show Command Log",
        "category": "Shell"
      },
      {
        "command": "shell.executeSelection",
        "title": "Execute Selection"
      },
      {
        "command": "shell.executeSelectionDelete",
        "title": "Execute Selection And Delete Selection"
      },
      {
        "command": "shell.executeSelectionOutputInPlace",
        "title": "Execute Selection Output In-place"
      },
      {
        "command": "shell.executeSelectionOutputReplace",
        "title": "Execute Selection Output Replace Selection"
      },
      {
        "command": "shell.executeLastCommand",
        "title": "Execute Last Command"
      },
      {
        "command": "shell.documentShellCommandView.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "shell.documentShellCommandView.clear",
        "title": "Clear",
        "icon": "$(trash)"
      },
      {
        "command": "shell.documentShellCommandView.run",
        "title": "Run",
        "icon": "$(play)"
      },
      {
        "command": "shell.documentShellCommandView.runQueue",
        "title": "Queue",
        "icon": "$(watch)"
      },
      {
        "command": "shell.documentShellCommandView.show",
        "title": "Show",
        "icon": "$(go-to-file)"
      },
      {
        "command": "shell.clipboardHistoryView.paste",
        "title": "Paste",
        "icon": "$(clippy)"
      },
      {
        "command": "shell.clipboardHistoryView.delete",
        "title": "Delete",
        "icon": "$(search-remove)"
      },
      {
        "command": "shell.clipboardHistoryView.edit",
        "title": "Edit",
        "icon": "$(settings-edit)"
      },
      {
        "command": "shell.clipboardHistoryView.clear",
        "title": "Clear",
        "icon": "$(trash)"
      },
      {
        "command": "shell.showClipboardHistory",
        "title": "Show clipboard history"
      }
    ],
    "keybindings": [
      {
        "command": "shell.runCommand",
        "key": "Ctrl+; r"
      },
      {
        "command": "shell.executeSelection",
        "key": "ctrl+; ctrl+enter",
        "mac": "cmd+; ctrl+enter",
        "when": "editorTextFocus"
      },
      {
        "command": "shell.executeSelectionDelete",
        "key": "ctrl+; ctrl+shift+enter",
        "mac": "cmd+; ctrl+shift+enter",
        "when": "editorTextFocus"
      },
      {
        "command": "shell.executeSelectionOutputInPlace",
        "key": "ctrl+; ctrl+alt+enter",
        "mac": "cmd+; ctrl+alt+enter",
        "when": "editorTextFocus"
      },
      {
        "command": "shell.executeSelectionOutputReplace",
        "key": "ctrl+; ctrl+shift+alt+enter",
        "mac": "cmd+; ctrl+shift+alt+enter",
        "when": "editorTextFocus"
      },
      {
        "command": "shell.executeLastCommand",
        "key": "Ctrl+shift+enter"
      },
      {
        "command": "shell.showHistory",
        "key": "Ctrl+; h"
      },
      {
        "command": "shell.showClipboardHistory",
        "key": "Ctrl+shift+v"
      }
    ],
    "configuration": {
      "title": "Shell",
      "properties": {
        "shell.shell": {
          "type": "string",
          "enum": [
            "cmd.exe",
            "powershell.exe"
          ],
          "default": "cmd.exe",
          "description": "Configure shell"
        },
        "shell.outputTerminal": {
          "type": "string",
          "enum": [
            "Terminal",
            "Output Channel"
          ],
          "default": "Terminal",
          "description": "Configure location of output",
          "enumDescriptions": [
            "Output to terminal (Ctrl+`)",
            "Output to output channel (Ctrl+Shift+U, select Shell)"
          ]
        },
        "shell.debug": {
          "type": "boolean",
          "default": false,
          "description": "General debug preferences."
        },
        "shell.reuseTerminal": {
          "type": "boolean",
          "default": true,
          "description": "Re-use previously created terminal rather creating new one."
        },
        "shell.stopPreviousProcess": {
          "type": "boolean",
          "default": true,
          "description": "If re-using previous terminals, stop the previous execution upon new invocation."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "build-vsix": "vsce package --yarn",
    "install": "powershell.exe -command \"code --install-extension (resolve-path .\\shell-*.vsix).path\""
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/ringbufferjs": "^1.1.2",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "eslint": "^8.57.0",
    "ringbufferjs": "^2.0.0",
    "spawn-command": "^0.0.2-1",
    "tree-kill": "^1.2.2",
    "ts-loader": "^9.5.1",
    "typescript": "^5.4.5",
    "vsce": "^2.15.0",
    "webpack": "^5.92.1",
    "webpack-cli": "^5.1.4"
  }
}
